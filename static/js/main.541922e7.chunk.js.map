{"version":3,"sources":["Components/Section/Section.module.css","Components/Statistics/Statistics.jsx","Components/FeedbackOption/FeedbackOption.jsx","Components/Notification/Notification.jsx","Components/Section/Section.jsx","App.js","index.js","Components/Statistics/Statistics.module.css","Components/FeedbackOption/FeedbackOption.module.css","Components/Notification/Notification.module.css"],"names":["module","exports","Statistics","good","neutral","bad","total","positivePercentage","className","s","text","FeedbackOption","options","onLeaveFeedback","map","option","type","name","button","onClick","Notification","message","messageText","Section","title","children","App","state","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","event","nameBtn","target","setState","prevState","this","keyObject","Object","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"gIACAA,EAAOC,QAAU,CAAC,MAAQ,yB,8HCuBXC,EApBI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qCACE,oBAAGC,UAAWC,IAAEC,KAAhB,kBAA4BP,KAC5B,oBAAGK,UAAWC,IAAEC,KAAhB,qBAA+BN,KAC/B,oBAAGI,UAAWC,IAAEC,KAAhB,iBAA2BL,KAC3B,oBAAGG,UAAWC,IAAEC,KAAhB,mBAA6BJ,KAC7B,oBAAGE,UAAWC,IAAEC,KAAhB,gCAA0CH,EAA1C,Y,gBCgBSI,EAvBQ,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBACjC,OACE,mCACGD,EAAQE,KAAI,SAACC,GAAD,OACX,wBAEEC,KAAK,SACLC,KAAMF,EACNP,UAAWC,IAAES,OACbC,QAASN,EALX,SAOGE,GANIA,S,gBCOAK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,mBAAGb,UAAWC,IAAEa,YAAhB,SAA8BD,O,iBCWrBE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,qCACE,oBAAIjB,UAAWC,IAAEe,MAAjB,SAAyBA,IACxBC,MCFDC,E,4MACJC,MAAQ,CACNxB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPuB,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQxB,KAAR,EAAcC,QAAd,EAAuBC,K,EAKzBwB,gCAAkC,WAChC,MAA+B,EAAKF,MAA5BxB,EAAR,EAAQA,KACFG,EAASH,GAAQA,EADvB,EAAcC,QAAd,EAAuBC,KACyB,IAChD,OAAOyB,KAAKC,MAAMzB,I,EAGpBO,gBAAkB,SAACmB,GACjB,IAAMC,EAAUD,EAAME,OAAOjB,KAE7B,EAAKkB,UAAS,SAACC,GAAD,sBACXH,EAAUG,EAAUH,GAAW,O,4CAIpC,WACE,MAA+BI,KAAKV,MAA5BxB,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBiC,EAAYC,OAAOC,KAAKH,KAAKV,OAC7BrB,EAAQ+B,KAAKT,qBACbrB,EAAqB8B,KAAKR,kCAEhC,OACE,sBAAKrB,UAAU,MAAf,UACE,cAAC,EAAD,CAASgB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEZ,QAAS0B,EACTzB,gBAAiBwB,KAAKxB,oBAG1B,cAAC,EAAD,CAASW,MAAM,aAAf,SACa,IAAVlB,EACC,cAAC,EAAD,CAAce,QAAQ,yBAEtB,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAlDhBkC,aA2DHf,IC7DfgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U,kBCHjD7C,EAAOC,QAAU,CAAC,KAAO,2B,kBCAzBD,EAAOC,QAAU,CAAC,OAAS,iC,kBCA3BD,EAAOC,QAAU,CAAC,KAAO,8B","file":"static/js/main.541922e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2a6ZV\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <>\n      <p className={s.text}>Good:{good}</p>\n      <p className={s.text}>Neutral:{neutral}</p>\n      <p className={s.text}>Bad:{bad}</p>\n      <p className={s.text}>Total:{total}</p>\n      <p className={s.text}>Positive feedback: {positivePercentage} %</p>\n    </>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./FeedbackOption.module.css\";\n\nconst FeedbackOption = ({ options, onLeaveFeedback }) => {\n  return (\n    <>\n      {options.map((option) => (\n        <button\n          key={option}\n          type=\"button\"\n          name={option}\n          className={s.button}\n          onClick={onLeaveFeedback}\n        >\n          {option}\n        </button>\n      ))}\n    </>\n  );\n};\n\nFeedbackOption.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOption;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => {\n  return (\n    <>\n      <p className={s.messageText}>{message}</p>\n    </>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import React, { Component } from \"react\";\nimport Statistics from \"./Components/Statistics/Statistics\";\nimport FeedbackOption from \"./Components/FeedbackOption/FeedbackOption\";\nimport Notification from \"./Components/Notification/Notification\";\nimport Section from \"./Components/Section/Section\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const total = (good / (good + neutral + bad)) * 100;\n    return Math.round(total);\n  };\n\n  onLeaveFeedback = (event) => {\n    const nameBtn = event.target.name;\n\n    this.setState((prevState) => ({\n      [nameBtn]: prevState[nameBtn] + 1,\n    }));\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const keyObject = Object.keys(this.state);\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <div className=\"App\">\n        <Section title=\"Please leave feedback\">\n          <FeedbackOption\n            options={keyObject}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"There is no feedback\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Statistics_text__3QWrc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOption_button__4Rppb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"Notification_text__1a8u0\"};"],"sourceRoot":""}